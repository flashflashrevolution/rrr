name: CI

on:
  pull_request:
    paths-ignore:
      - "*.md"
      - ".vscode/**"
      - "LICENCE"
  push:
    branches: [main]
    paths-ignore:
      - "*.md"
      - ".vscode/**"
      - "LICENCE"

env:
  CARGO_TERM_VERBOSE: true
  RUST_BACKTRACE: 1
  RUSTFLAGS: "" #-Dwarnings

jobs:
  actionlint:
    name: Lint GitHub Actions workflows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2

      - name: Download actionlint
        id: get_actionlint
        run: bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)

      - name: Check workflow files
        run: ${{ steps.get_actionlint.outputs.executable }} -color
        
  rustfmt:
    name: Rustfmt check
    runs-on: ubuntu-latest
    needs: [actionlint]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt

      - name: Rustfmt
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check

  test:
    strategy:
      matrix:
        os: [ubuntu-latest]

    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    needs: [rustfmt]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 1
          lfs: true

      - name: Install Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libegl1-mesa-dev xorg-dev libasound2-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          components: llvm-tools-preview, clippy

      - name: ⚡ Cache
        uses: Swatinem/rust-cache@v2.0.0
        if: ${{ !env.ACT }}

      - name: Extract Test Data
        run: 7z x -t7z ${{ github.workspace }}/assets/test-data.7z -o${{ github.workspace }}/ -p'${{ secrets.TEST_DATA_ARCHIVE_PASSWORD }}' -aoa

      - name: Build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --workspace

      - name: Test
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: --workspace
          
      - name: Clippy
        run: cargo clippy --workspace

  docs:
    name: Deploy docs
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 1
          lfs: true

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y libegl1-mesa-dev xorg-dev libasound2-dev
        
      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          components: llvm-tools-preview

      - name: ⚡ Cache
        uses: Swatinem/rust-cache@v2.0.0
        if: ${{ !env.ACT }}
        
      - name: Extract Test Data
        run: 7z x -t7z ${{ github.workspace }}/assets/test-data.7z -o${{ github.workspace }}/ -p'${{ secrets.TEST_DATA_ARCHIVE_PASSWORD }}' -aoa

      - name: API docs
        uses: actions-rs/cargo@v1.0.3
        with:
          command: doc
          args: --workspace --no-deps

      - name: Deploy API docs
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
          destination_dir: api

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1.2.0
        with:
          mdbook-version: latest

      - name: Book
        run: mdbook build docs

      - name: Deploy book
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/book
          destination_dir: book
