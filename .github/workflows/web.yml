name: web

on:
  push:
    branches: [main]
    paths-ignore:
      - "*.md"
      - ".vscode/**"
      - "LICENCE"
      - ".github/workflows/code-coverage.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.2.0
        with:
          fetch-depth: 1
          lfs: true

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          components: llvm-tools-preview

      - uses: jetli/wasm-bindgen-action@v0.1.0
        with:
          version: "latest"

      - name: âš¡ Cache
        uses: Swatinem/rust-cache@v2.0.0
        if: ${{ !env.ACT }}

      - name: Extract Test Data
        run: 7z x -t7z ${{ github.workspace }}/assets/test-data.7z -o${{ github.workspace }}/ -p'${{ secrets.TEST_DATA_ARCHIVE_PASSWORD }}' -aoa

      - name: Build
        working-directory: ${{ github.workspace }}/crates/head-wasm
        run: |
          cargo build --release --target wasm32-unknown-unknown --target-dir target
        env:
          TEST_PREVIEW_HASH: ${{ secrets.TEST_PREVIEW_HASH }}

      - name: Generate the .wasm for web deploy.
        working-directory: ${{ github.workspace }}/crates/head-wasm
        run: wasm-bindgen --out-name rrr --out-dir ${{ github.workspace }}/web/bin --target web target/wasm32-unknown-unknown/release/rrr_head_wasm.wasm

      - name: Build Workers
        working-directory: ${{ github.workspace }}/crates/wasm-workers
        run: |
          cargo build --release --bins --target wasm32-unknown-unknown --target-dir target
        env:
          TEST_PREVIEW_HASH: ${{ secrets.TEST_PREVIEW_HASH }}

      - name: Generate web workers
        working-directory: ${{ github.workspace }}/crates/wasm-workers
        run: wasm-bindgen --no-typescript --out-name fetch-worker --out-dir ${{ github.workspace }}/web/bin --target no-modules target/wasm32-unknown-unknown/release/fetch.wasm

      - name: Upload Web Directory
        uses: actions/upload-artifact@v3
        with:
          name: web-directory
          path: ./web

  deploy-pages:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: web-directory
          path: ./web

      - name: Deploy Pages
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./web
          cname: rrr.flashflashrevolution.com
          keep_files: true
