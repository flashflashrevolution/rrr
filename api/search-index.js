var searchIndex = JSON.parse('{\
"rrr_core":{"doc":"","tn":["RRR","audio","borrow","borrow_mut","chart","default","download_chart","fetch","fmt","from","into","into_sample","loaders","new","play","record","settings","start_chart","strum","time","try_from","try_into","turntable","type_id","with_settings","AudioPlayer","AudioResampler","ResamplingSpec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channels","clone","clone_into","fmt","from","from","from","input_rate","input_size","into","into","into","into_sample","into_sample","into_sample","new","output_rate","output_size","process","ratio","resampler","spec","stop","tick","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_new","type_id","type_id","type_id","Beat","BpmChange","Chart","CompiledChart","Compressed","Parsed","Parsing","ReadyToParse","SwfParser","SwfParserState","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpm","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compile","decompress","default","default","default","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_duration","get_first_bpm","hash","hash","into","into","into","into","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","ne","ne","ne","ne","new","new","new","new","new","note","notes","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","produce_tape","serialize","serialize","serialize","serialize","tick","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Blue","Color","ColorIter","CompiledNote","Cyan","Direction","Down","Green","Left","Note","NoteRow","Orange","Pink","Purple","Receptor","Red","Right","Up","White","Yellow","beat_position","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","color","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","direction","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","into","into_iter","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","iter","len","ne","ne","ne","new","new","next","next_back","nth","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","size_hint","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","download_chart","Artist","Chart","Payload","arrows","artist","artists","author","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","charts","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","difficulty","eq","eq","eq","fetch","fmt","fmt","fmt","from","from","from","genre","id","into","into","into","into_sample","into_sample","into_sample","level","name","name","ne","ne","ne","releasedate","serialize","serialize","serialize","style","time","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","userid","Active","Concluded","Difference","Play","PlayState","Ready","abs_dif","actions","actions","actions","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","diff","do_action","finalize","from","from","from","from","into","into","into","into","into_sample","into_sample","into_sample","into_sample","judge","judgements","missed_notes","new","progress","start","stop","tick","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","view","ActionState","Boo","Hit","Miss","NoteAction","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","from","from","into","into","into_sample","into_sample","note","state","timestamp","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","JUDGE","Judge","JudgeWindow","Judgement","JudgementReport","amazings","averages","boos","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","fmt","fmt","from","from","from","goods","hash","into","into","into","into_sample","into_sample","into_sample","judge","judgements","misses","misses","ne","new","new","perfects","receptor_position","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Record","borrow","borrow_mut","chart","clone","clone_into","duration","fmt","from","into","into_sample","mp3","new","optimized_chart","to_owned","try_from","try_into","type_id","Settings","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","fmt","from","into","into_sample","ne","new","partial_cmp","serialize","speed","to_owned","try_from","try_into","type_id","TimeTrait","as_secs_f64","now","performance","sub","Time","as_secs_f64","borrow","borrow_mut","clone","clone_into","from","into","into_sample","now","sub","to_owned","try_from","try_into","type_id","Empty","Loaded","Playing","Turntable","TurntableState","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","from","from","into","into","into","into","into_sample","into_sample","into_sample","into_sample","is_finished","load","play","progress","progress","stop","tick","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","view"],"q":["rrr_core","","","","","","","","","","","","","","","","","","","","","","","","","rrr_core::audio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrr_core::chart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrr_core::chart::note","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrr_core::download_chart","rrr_core::fetch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrr_core::play","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrr_core::play::actions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrr_core::play::judge","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrr_core::record","","","","","","","","","","","","","","","","","","rrr_core::settings","","","","","","","","","","","","","","","","","","","","","rrr_core::time","","","","","rrr_core::time::performance","","","","","","","","","","","","","","","rrr_core::turntable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Errors","","","Panics","","","","Panics","Panics","","","","","","","","Panics","","","","Stores all of the note rows that represent a beat.","Represents a BPM change in a chart.","A space/memory efficient representation of a chart.","A runtime efficient representation of a chart used by an …","","","","","","","","","","","","","","","","","","","","","","","","","Get the bpm change’s bpm.","","","","","","","","","","","","Errors","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","Represents a single note in a note row.","Stores the notes that belong to a single row in a beat.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Artificial download function which simply opens the file …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Temporary function giving a view directly into the playing …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Creates a new <code>Judge</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Errors","","","","","","Stores RRR settings to start charts with.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,1,0,0,1,1,1,1,0,1,0,0,0,1,0,0,1,1,0,1,1,0,0,0,9,11,8,9,11,8,8,8,8,9,9,11,8,8,8,9,11,8,9,11,8,11,8,8,11,8,11,11,9,9,8,9,11,8,9,11,8,9,9,11,8,0,0,0,0,0,0,0,0,0,0,24,23,25,33,34,18,4,20,21,24,23,25,33,34,18,4,20,21,18,18,4,20,21,18,4,20,21,4,21,20,24,18,20,21,18,4,20,21,18,4,20,21,4,21,18,4,20,21,24,23,25,33,34,18,4,20,21,4,20,4,21,24,23,25,33,34,18,4,20,21,24,23,25,33,34,18,4,20,21,18,4,20,21,24,18,4,20,21,0,4,24,18,4,20,21,24,18,4,20,21,24,18,4,20,21,24,23,25,33,34,18,4,20,21,24,23,25,33,34,18,4,20,21,24,23,25,33,34,18,4,20,21,36,0,0,0,36,0,38,36,38,0,0,36,36,36,36,36,38,38,36,36,39,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,36,38,39,40,41,39,40,41,36,38,39,40,41,39,36,38,39,40,41,36,38,39,40,41,36,38,39,39,40,41,36,37,38,39,40,41,36,38,39,40,41,36,37,38,39,40,41,37,36,37,38,39,40,41,36,37,39,40,41,40,41,37,37,37,36,38,39,40,41,36,38,39,40,41,37,39,36,37,38,39,40,41,39,36,37,38,39,40,41,36,37,38,39,40,41,36,37,38,39,40,41,0,0,0,0,46,46,44,46,44,45,46,44,45,46,44,44,45,46,44,45,46,44,45,46,46,44,45,46,0,44,45,46,44,45,46,46,45,44,45,46,44,45,46,46,45,46,44,45,46,46,44,45,46,46,46,44,45,46,44,45,46,44,45,46,44,45,46,45,45,0,0,0,0,0,0,68,0,49,49,49,52,51,48,49,52,51,48,48,48,68,49,49,49,52,51,48,49,52,51,48,49,52,51,48,0,49,49,49,49,49,49,49,48,49,52,51,48,49,52,51,48,49,52,51,48,49,0,59,59,59,0,59,60,59,60,59,60,59,60,59,60,60,59,60,59,60,59,60,60,60,60,59,60,60,59,60,59,60,59,60,61,0,0,0,0,0,63,63,63,63,61,62,63,61,62,61,62,61,62,61,61,61,62,63,61,62,63,61,63,61,62,63,61,62,62,62,63,62,61,63,62,63,62,61,62,63,61,62,63,61,62,63,61,62,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,69,69,0,69,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,0,70,55,56,67,70,55,56,67,56,67,56,67,70,55,56,67,70,55,56,67,70,55,56,67,56,56,56,56,67,56,56,56,67,70,55,56,67,70,55,56,67,70,55,56,67,56],"f":[0,0,[[]],[[]],0,[[],1],0,0,[[1,2],3],[[]],[[]],[[]],0,[[],1],0,0,0,[[1,4]],0,0,[[],5],[[],5],0,[[],6],[7,1],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[8,8],[[]],[[9,2],3],[[]],[[]],[[]],0,[[8,10],10],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[5,[11,12]]]],0,[[8,10],10],[11,[[5,[13]]]],[8,14],0,0,[9],[9,[[16,[15]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],[[17,[9]]]],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,19],[18,18],[4,4],[20,20],[21,21],[[]],[[]],[[]],[[]],[[4,4],22],[[21,21],22],[20,4],[[[24,[23]]],[[17,[[24,[25]],26]]]],[[],18],[[],20],[[],21],[[],[[5,[18]]]],[[],[[5,[4]]]],[[],[[5,[20]]]],[[],[[5,[21]]]],[[18,18],27],[[4,4],27],[[20,20],27],[[21,21],27],[[],27],[[],27],[[18,2],3],[[4,2],3],[[20,2],3],[[21,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[5,[28,29]]]],[20,[[16,[19]]]],[4],[21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,18],27],[[4,4],27],[[20,20],27],[[21,21],27],[[[31,[30]]],[[24,[23]]]],[[19,10],18],[[],4],[[],20],[32,21],0,0,[[[24,[25]]],[[24,[33]]]],[[18,18],[[16,[22]]]],[[4,4],[[16,[22]]]],[[20,20],[[16,[22]]]],[[21,21],[[16,[22]]]],[[[24,[34]]],35],[18,5],[4,5],[20,5],[21,5],[[[24,[33]]],[[24,[34]]]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[[]],[[]],[[]],[[]],[[]],[[]],[[36,36],22],[[38,38],22],[[39,39],22],[[40,40],22],[[41,41],22],0,[[],40],[[],41],[[],[[5,[36]]]],[[],[[5,[38]]]],[[],[[5,[39]]]],[[],[[5,[40]]]],[[],[[5,[41]]]],0,[[36,36],27],[[38,38],27],[[39,39],27],[[40,40],27],[[41,41],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[36,2],3],[[38,2],3],[[39,2],3],[[39,2],3],[[40,2],3],[[41,2],3],[[]],[[]],[[]],[[]],[[]],[[]],[36],[38],[39],[40],[41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[37,10],[[39,39],27],[[40,40],27],[[41,41],27],[10,40],[32,41],[37,16],[37,16],[[37,10],16],[[36,36],[[16,[22]]]],[[38,38],[[16,[22]]]],[[39,39],[[16,[22]]]],[[40,40],[[16,[22]]]],[[41,41],[[16,[22]]]],[36,5],[38,5],[39,5],[40,5],[41,5],[37],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],42],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[10,[[16,[[43,[[31,[30]]]]]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[44,44],[45,45],[46,46],[[]],[[]],[[]],[[],[[5,[44]]]],[[],[[5,[45]]]],[[],[[5,[46]]]],0,[[44,44],27],[[45,45],27],[[46,46],27],[[],47],[[44,2],3],[[45,2],3],[[46,2],3],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[44,44],27],[[45,45],27],[[46,46],27],0,[44,5],[45,5],[46,5],0,0,[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,[28],0,[[[49,[48]]],50],[[[49,[51]]],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,48],[[]],[28,28],[[[49,[48]],38,28]],[[[49,[51]]],[[49,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[49,[48]]],53],[[[49,[48]]],54],[[[56,[55]]],[[49,[52]]]],[[[49,[48]]],57],[[[49,[52]]],[[49,[48]]]],[[[49,[48]]],[[49,[52]]]],[[[49,[48]],57]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[[49,[48]],57],[[58,[28,39]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[59,59],[60,60],[[]],[[]],[[59,2],3],[[60,2],3],[[60,2],3],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[],42],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[62,62],[[]],[[]],[[61,61],27],[[],27],[[61,2],3],[[62,2],3],[[]],[[]],[[]],0,[61],[[]],[[]],[[]],[[]],[[]],[[]],[[62,28,39]],0,0,0,[[61,61],27],[62,63],[28,62],0,0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],0,[[]],[[]],0,[35,35],[[]],0,[[35,2],3],[[]],[[]],[[]],0,[[[31,[30]],4],[[5,[35,29]]]],0,[[]],[[],5],[[],5],[[],6],0,[[]],[[]],[7,7],[[]],[[],7],[[],[[5,[7]]]],[[7,7],27],[[7,2],3],[[]],[[]],[[]],[[7,7],27],[[],7],[[7,7],[[16,[22]]]],[7,5],0,[[]],[[],5],[[],5],[[],6],0,[[],14],[[]],0,[[],14],0,[64,14],[[]],[[]],[64,64],[[]],[[]],[[]],[[]],[[],64],[[64,64],14],[[]],[[],5],[[],5],[[],6],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[56,[[0,[65,66]]]]],[[56,[[0,[65,66]]]]]],[67,67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[56,[67]]],27],[35,[[56,[55]]]],[[[56,[55]]],[[56,[67]]]],[[[56,[67]]],57],0,[[[56,[67]]],[[56,[55]]]],[[[56,[67]],57]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[[56,[67]],28],[[58,[28,39]]]]],"p":[[3,"RRR"],[3,"Formatter"],[6,"Result"],[3,"CompiledChart"],[4,"Result"],[3,"TypeId"],[3,"Settings"],[3,"ResamplingSpec"],[3,"AudioPlayer"],[15,"usize"],[3,"AudioResampler"],[4,"ResamplerConstructionError"],[4,"ResampleError"],[15,"f64"],[6,"TimeStamp"],[4,"Option"],[6,"Result"],[3,"BpmChange"],[15,"f32"],[3,"Chart"],[3,"Beat"],[4,"Ordering"],[3,"Compressed"],[3,"SwfParser"],[3,"ReadyToParse"],[4,"Error"],[15,"bool"],[15,"i128"],[3,"Error"],[15,"u8"],[3,"Vec"],[15,"u32"],[3,"Parsing"],[3,"Parsed"],[3,"Record"],[4,"Color"],[3,"ColorIter"],[4,"Direction"],[3,"CompiledNote"],[3,"Note"],[3,"NoteRow"],[3,"String"],[3,"Box"],[3,"Payload"],[3,"Artist"],[3,"Chart"],[8,"Future"],[3,"Active"],[3,"Play"],[3,"BTreeMultiMap"],[3,"Concluded"],[3,"Ready"],[6,"Judgement"],[3,"HashSet"],[3,"Loaded"],[3,"Turntable"],[15,"u64"],[3,"MultiRange"],[4,"ActionState"],[3,"NoteAction"],[3,"JudgeWindow"],[3,"Judge"],[3,"JudgementReport"],[3,"Time"],[8,"Clone"],[8,"TurntableState"],[3,"Playing"],[8,"Difference"],[8,"TimeTrait"],[3,"Empty"]]},\
"rrr_head":{"doc":"","t":[3,17,17,11,11,5,5,12,11,5,11,11,11,11,0,5,5,11,5,11,11,11,5,11,0,12,12,12,12,5,12,12,5,5,0,11,12,11,11,11,11,11,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,12,8,5,10,10,10],"n":["Game","HEIGHT","WIDTH","borrow","borrow_mut","build_window","clear","current_instant","do_action","do_toggle_game_state_debug","downcast","draw","finish","from","geo","get_noteskin","handle_keyboard_input","init","init_log","into","into_sample","load","main","new","noteskin","noteskin","pixels","play_stage","previous_instant","rect","rect_x","rect_y","run","run_game_loop","sprites","start","start_instant","try_from","try_into","type_id","upcast","update","visibility","Point","Rect","add","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","downcast","downcast","fmt","fmt","from","from","get_bounds","intersects","into","into","into_sample","into_sample","mul","new","new","p1","p2","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","x","y","Definition","Note","borrow","borrow","borrow_mut","borrow_mut","color","color_indexs","downcast","downcast","from","from","get_note","get_rotations","height","height","image","image","into","into","into_sample","into_sample","new","note_height","note_width","pixels","rotations","rows","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","width","width","Drawable","blit","height","pixels","width"],"q":["rrr_head","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrr_head::geo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrr_head::noteskin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrr_head::sprites","","","",""],"d":["","","","","","","","","","","","Draw the <code>World</code> state to the frame buffer.","","Returns the argument unchanged.","Simple geometry primitives.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","A tiny position vector.","A tiny rectangle based on two absolute <code>Point</code>s.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Compute the bounding box for this rectangle.","Test for intersections between two rectangles.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new point.","Create a rectangle from two <code>Point</code>s.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Drawables can be blitted to the pixel buffer and animated.","","","",""],"i":[0,0,0,5,5,0,0,5,5,0,5,5,5,5,0,0,0,5,0,5,5,5,0,5,0,5,5,5,5,0,5,5,0,0,0,5,5,5,5,5,5,5,0,0,0,20,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,21,21,20,21,20,21,20,20,21,21,21,20,21,20,21,20,21,20,21,20,21,20,20,0,0,11,26,11,26,26,11,11,26,11,26,11,11,26,26,11,26,11,26,11,26,11,11,11,26,11,11,11,26,11,26,11,26,11,26,26,26,0,0,30,30,30],"f":[0,0,0,[[]],[[]],[1,[[4,[2,3]]]],[[]],0,[[5,6]],[5],[[]],[5],[5],[[]],0,[[]],[[7,8,5,2,9]],[5],[[]],[[]],[[]],[[5,10]],[[]],[[[12,[11]],13,[12,[[15,[14]]]]],5],0,0,0,0,0,[[16,16,16,16]],0,0,[[],17],[[2,1],17],0,[5],0,[[],18],[[],18],[[],19],[[],12],[5],0,0,0,[[20,20],20],[[]],[[]],[[]],[[]],[20,20],[21,21],[[]],[[]],[[],20],[[],21],[[]],[[]],[[20,22],23],[[21,22],23],[[]],[[]],[21],[[21,21],24],[[]],[[]],[[]],[[]],[[20,20],20],[[10,10],20],[[20,20],21],0,0,[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],12],[[],12],0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[11,25],26],[11],[26,10],0,0,0,[[]],[[]],[[]],[[]],[[10,10,[27,[25]],[27,[10]],28,10],11],0,0,[26,[[29,[28]]]],0,0,[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],12],[[],12],[26,10],0,0,[[16,16,6]],[[],10],[[],[[29,[28]]]],[[],10]],"p":[[3,"EventLoop"],[3,"Window"],[3,"OsError"],[6,"Result"],[3,"Game"],[4,"Direction"],[4,"VirtualKeyCode"],[4,"ControlFlow"],[3,"ModifiersState"],[15,"usize"],[3,"Definition"],[4,"Option"],[3,"Pixels"],[3,"Active"],[3,"Play"],[15,"f64"],[8,"Future"],[4,"Result"],[3,"TypeId"],[3,"Point"],[3,"Rect"],[3,"Formatter"],[6,"Result"],[15,"bool"],[4,"Color"],[3,"Note"],[3,"Vec"],[4,"DynamicImage"],[3,"SubImage"],[8,"Drawable"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
